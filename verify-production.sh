#!/bin/bash

# üîç SCRIPT VERIFICACI√ìN PRODUCCI√ìN WHATSAPP-GHL
echo "üöÄ Verificando deploy en producci√≥n..."
echo "======================================"

PROD_URL="https://whatsapp.cloude.es"
LOCAL_URL="http://localhost:3000"

# 1. Health Check
echo "1Ô∏è‚É£ Health Check..."
HEALTH_STATUS=$(curl -s "$PROD_URL/api/health" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
if [ "$HEALTH_STATUS" = "healthy" ]; then
    echo "   ‚úÖ API saludable: $HEALTH_STATUS"
else
    echo "   ‚ùå API no disponible"
fi

# 2. Verificar p√°gina principal
echo ""
echo "2Ô∏è‚É£ P√°gina principal..."
MAIN_PAGE_TITLE=$(curl -s "$PROD_URL" | grep -o '<title>[^<]*</title>' | sed 's/<\/?title>//g')
echo "   üìÑ T√≠tulo actual: $MAIN_PAGE_TITLE"

if [[ "$MAIN_PAGE_TITLE" == *"WhatsApp Business Login"* ]]; then
    echo "   ‚úÖ Login simple deployado correctamente"
else
    echo "   ‚ö†Ô∏è  P√°gina antigua a√∫n activa"
    echo "   üîÑ Deploy podr√≠a estar pendiente..."
fi

# 3. Verificar endpoints nuevos
echo ""
echo "3Ô∏è‚É£ Endpoints de login..."
LOGIN_CLIENT=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/clients/login")
LOGIN_ADMIN=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/admin/login")

if [ "$LOGIN_CLIENT" = "400" ]; then
    echo "   ‚úÖ API login cliente disponible (400 = falta body)"
else
    echo "   ‚ùå API login cliente: HTTP $LOGIN_CLIENT"
fi

if [ "$LOGIN_ADMIN" = "400" ]; then
    echo "   ‚úÖ API login admin disponible (400 = falta body)"
else
    echo "   ‚ùå API login admin: HTTP $LOGIN_ADMIN"
fi

# 4. Verificar dashboard simple
echo ""
echo "4Ô∏è‚É£ Dashboard simple..."
DASHBOARD_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/dashboard/FINAL_PRODUCTION_TEST_1755992451")
if [ "$DASHBOARD_STATUS" = "200" ]; then
    echo "   ‚úÖ Dashboard simple accesible"
else
    echo "   ‚ùå Dashboard simple: HTTP $DASHBOARD_STATUS"
fi

# 5. Test conexi√≥n instancia
echo ""
echo "5Ô∏è‚É£ Test API conexi√≥n WhatsApp..."
CONNECT_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$PROD_URL/api/instances/FINAL_PRODUCTION_TEST_1755992451/1/connect" -H "Content-Type: application/json")
if [ "$CONNECT_STATUS" = "200" ]; then
    echo "   ‚úÖ API conexi√≥n WhatsApp funcional"
else
    echo "   ‚ùå API conexi√≥n WhatsApp: HTTP $CONNECT_STATUS"
fi

# 6. Comparar con local
echo ""
echo "6Ô∏è‚É£ Comparaci√≥n con desarrollo local..."
LOCAL_HEALTH=$(curl -s "$LOCAL_URL/api/health" 2>/dev/null | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
if [ "$LOCAL_HEALTH" = "healthy" ]; then
    echo "   üè† Local funcionando: $LOCAL_HEALTH"
    echo "   üîÑ Diferencia detectada - Deploy necesario"
else
    echo "   ‚ö†Ô∏è  Local no disponible (normal si no est√° corriendo)"
fi

echo ""
echo "======================================"
echo "üéØ RESUMEN:"
echo "   ‚Ä¢ API backend: Actualizada ‚úÖ"
echo "   ‚Ä¢ Archivos est√°ticos: Verificar ‚ö†Ô∏è"
echo "   ‚Ä¢ Auto-deploy: Monitorear üîÑ"
echo ""
echo "üí° Si persiste el problema:"
echo "   1. Acceder a Coolify dashboard"
echo "   2. Trigger manual deploy"
echo "   3. Verificar logs de build"
echo "======================================"