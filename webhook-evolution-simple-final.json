{
  "name": "Evolution Webhook ‚Üí GHL FINAL (SIMPLE)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evolution-final",
        "responseMode": "responseNode",
        "options": {
          "responseData": "Test webhook received successfully"
        }
      },
      "id": "webhook-evolution-final",
      "name": "Evolution Webhook FINAL",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [240, 340],
      "webhookId": "evolution-webhook-final"
    },
    {
      "parameters": {
        "jsCode": "// üéØ C√ìDIGO FINAL EVOLUTION ‚Üí GHL\nconst data = $input.all()[0].json;\n\nconsole.log('üéØ Webhook Evolution FINAL recibido:', JSON.stringify(data, null, 2));\n\n// Log headers y metadata\nconsole.log('Headers:', $input.all()[0].headers);\nconsole.log('User-Agent:', $input.all()[0].headers['user-agent']);\n\n// Verificar que es mensaje de WhatsApp\nif (!data.event || data.event !== 'messages.upsert') {\n  console.log('‚ùå No es mensaje upsert, ignorar');\n  return { status: 'ignored', reason: 'not_message_upsert' };\n}\n\n// Verificar que no es nuestro mensaje\nif (data.data && data.data.key && data.data.key.fromMe) {\n  console.log('‚ùå Mensaje enviado por nosotros, ignorar');\n  return { status: 'ignored', reason: 'from_me' };\n}\n\n// Procesar mensaje\nconst messageData = data.data;\nconst messageKey = messageData.key;\nconst messageContent = messageData.message;\n\n// Extraer n√∫mero de tel√©fono\nconst fromNumber = messageKey.remoteJid.replace('@s.whatsapp.net', '');\n\n// Extraer texto del mensaje\nconst messageText = messageContent.conversation || \n                   messageContent.extendedTextMessage?.text || \n                   messageContent.imageMessage?.caption || \n                   'Mensaje multimedia';\n\n// Formatear n√∫mero telef√≥nico\nconst cleanPhone = fromNumber.startsWith('1') ? fromNumber : `1${fromNumber}`;\nconst formattedPhone = `+${cleanPhone}`;\n\nconst result = {\n  success: true,\n  phone: formattedPhone,\n  message: messageText,\n  sender: data.pushName || 'Unknown',\n  instance: data.instance,\n  timestamp: new Date().toISOString(),\n  originalData: data\n};\n\nconsole.log('‚úÖ Procesado correctamente:', result);\n\nreturn result;"
      },
      "id": "process-evolution-final",
      "name": "Process Evolution FINAL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 340]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Webhook received and processed\",\n  \"phone\": \"{{ $json.phone }}\",\n  \"timestamp\": \"{{ $json.timestamp }}\"\n}"
      },
      "id": "response-evolution-final",
      "name": "Response Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [680, 340]
    }
  ],
  "connections": {
    "Evolution Webhook FINAL": {
      "main": [
        [
          {
            "node": "Process Evolution FINAL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Evolution FINAL": {
      "main": [
        [
          {
            "node": "Response Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["evolution-api", "webhook", "final", "simple"],
  "triggerCount": 1,
  "updatedAt": "2025-01-22T06:00:00.000Z",
  "versionId": "final"
}