{
  "meta": {
    "instanceId": "your-n8n-instance-id"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evolution",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "c8f0b5d2-8e1a-4f3b-9d2c-7a8b5e3f1c9d",
      "name": "Evolution Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        220,
        300
      ],
      "webhookId": "evolution-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.instance }}",
              "rightValue": "ray",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "filter-messages-ray",
      "name": "Filter: Mensajes Ray",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        440,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Procesar mensaje de WhatsApp para instancia 'ray'\nconst data = $input.all()[0].json;\n\nconsole.log('üì± Mensaje recibido en instancia ray:', JSON.stringify(data, null, 2));\n\n// Verificar estructura\nif (!data.data || !data.data.messages || !Array.isArray(data.data.messages)) {\n  throw new Error('‚ùå Estructura de datos inv√°lida');\n}\n\nconst message = data.data.messages[0];\nconst key = message.key;\n\n// Solo mensajes entrantes\nif (key.fromMe) {\n  throw new Error('‚è≠Ô∏è Mensaje enviado por nosotros, ignorar');\n}\n\n// Extraer datos\nconst fromNumber = key.remoteJid.replace('@s.whatsapp.net', '');\nconst messageText = message.message?.conversation || \n                  message.message?.extendedTextMessage?.text || \n                  message.message?.imageMessage?.caption || \n                  'Mensaje multimedia';\n\n// Limpiar n√∫mero de tel√©fono (formato internacional)\nconst cleanPhone = fromNumber.startsWith('1') ? fromNumber : `1${fromNumber}`;\n\n// Preparar datos para GHL\nconst contactData = {\n  locationId: 'jtEqGdhkoR6iePmZaCmd',\n  phone: `+${cleanPhone}`,\n  firstName: message.pushName || 'Contacto WhatsApp',\n  lastName: '',\n  tags: ['whatsapp', 'sms-scanner', 'evolution-api'],\n  customFields: {\n    whatsapp_name: message.pushName || '',\n    last_message: messageText,\n    source: 'Evolution API - SMS Scanner',\n    instance: 'ray'\n  }\n};\n\nconst messageData = {\n  locationId: 'jtEqGdhkoR6iePmZaCmd',\n  type: 'SMS',\n  message: messageText,\n  phone: `+${cleanPhone}`,\n  direction: 'inbound'\n};\n\nconsole.log('‚úÖ Datos procesados:', { contactData, messageData });\n\nreturn {\n  contactData,\n  messageData,\n  originalMessage: message,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "process-whatsapp-message",
      "name": "Procesar Mensaje WhatsApp",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        240
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "goHighLevelApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ $json.contactData }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          },
          "timeout": 10000
        }
      },
      "id": "create-ghl-contact",
      "name": "Crear Contacto GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        880,
        180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/conversations/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "goHighLevelApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $json.messageData.locationId }}\",\n  \"contactId\": \"{{ $node['Crear Contacto GHL'].json.contact.id }}\",\n  \"type\": \"SMS\",\n  \"message\": \"{{ $json.messageData.message }}\",\n  \"direction\": \"inbound\"\n}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "create-ghl-message",
      "name": "Crear Mensaje GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1100,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Mensaje procesado correctamente en instancia ray\",\n  \"data\": {\n    \"contactId\": \"{{ $node['Crear Contacto GHL'].json.contact.id }}\",\n    \"messageId\": \"{{ $node['Crear Mensaje GHL'].json.message.id }}\",\n    \"phone\": \"{{ $json.contactData.phone }}\",\n    \"timestamp\": \"{{ $json.timestamp }}\",\n    \"instance\": \"ray\"\n  }\n}",
        "options": {}
      },
      "id": "webhook-success-response",
      "name": "Respuesta √âxito",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1320,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Log de error para debugging\nconst error = $input.all()[0].json;\nconsole.log('‚ùå ERROR en workflow SMS Scanner:', JSON.stringify(error, null, 2));\n\nreturn {\n  success: false,\n  error: error.message || 'Error desconocido',\n  timestamp: new Date().toISOString(),\n  instance: 'ray'\n};"
      },
      "id": "error-handler",
      "name": "Manejo Errores",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        420
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Error procesando mensaje de WhatsApp\",\n  \"error\": \"{{ $json.error }}\",\n  \"timestamp\": \"{{ $json.timestamp }}\",\n  \"instance\": \"ray\"\n}",
        "options": {}
      },
      "id": "error-response",
      "name": "Respuesta Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        880,
        420
      ]
    }
  ],
  "connections": {
    "Evolution Webhook": {
      "main": [
        [
          {
            "node": "Filter: Mensajes Ray",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Mensajes Ray": {
      "main": [
        [
          {
            "node": "Procesar Mensaje WhatsApp",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Manejo Errores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Mensaje WhatsApp": {
      "main": [
        [
          {
            "node": "Crear Contacto GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Contacto GHL": {
      "main": [
        [
          {
            "node": "Crear Mensaje GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Mensaje GHL": {
      "main": [
        [
          {
            "node": "Respuesta √âxito",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manejo Errores": {
      "main": [
        [
          {
            "node": "Respuesta Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    "whatsapp",
    "evolution-api",
    "gohighlevel",
    "sms-scanner"
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-22T00:00:00.000Z",
  "versionId": "1"
}