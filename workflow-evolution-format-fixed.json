{
  "name": "SMS Scanner Evolution - Ray (FIXED FORMAT)",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evolution1",
        "responseMode": "responseNode"
      },
      "id": "webhook-evolution-ray",
      "name": "Evolution Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [240, 340],
      "webhookId": "evolution-webhook-fixed"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.event }}",
              "rightValue": "messages.upsert",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.instance }}",
              "rightValue": "ray",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "leftValue": "={{ $json.data.key.fromMe }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "filter-evolution-format",
      "name": "Filter: Evolution Format",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [460, 340]
    },
    {
      "parameters": {
        "jsCode": "// üì± C√ìDIGO ACTUALIZADO PARA FORMATO EVOLUTION API\nconst data = $input.all()[0].json;\n\nconsole.log('üì® Webhook Evolution recibido:', JSON.stringify(data, null, 2));\n\n// Verificar que es el formato correcto de Evolution\nif (!data.event || !data.instance || !data.data) {\n  throw new Error('‚ùå Formato de webhook Evolution inv√°lido');\n}\n\n// Verificar que es un mensaje y no nuestro mensaje\nif (data.data.key.fromMe) {\n  throw new Error('‚è≠Ô∏è Mensaje enviado por nosotros, ignorar');\n}\n\n// Extraer datos del formato Evolution\nconst messageData = data.data;\nconst messageKey = messageData.key;\nconst messageContent = messageData.message;\n\n// Extraer n√∫mero de tel√©fono (remover @s.whatsapp.net)\nconst fromNumber = messageKey.remoteJid.replace('@s.whatsapp.net', '');\n\n// Extraer texto del mensaje\nconst messageText = messageContent.conversation || \n                   messageContent.extendedTextMessage?.text || \n                   messageContent.imageMessage?.caption || \n                   'Mensaje multimedia';\n\n// Formatear n√∫mero telef√≥nico (agregar +1 si no lo tiene)\nconst cleanPhone = fromNumber.startsWith('1') ? fromNumber : `1${fromNumber}`;\nconst formattedPhone = `+${cleanPhone}`;\n\n// Datos para crear contacto en GHL\nconst contactData = {\n  locationId: 'jtEqGdhkoR6iePmZaCmd',\n  phone: formattedPhone,\n  firstName: data.pushName || 'WhatsApp User',\n  lastName: '',\n  tags: ['whatsapp', 'evolution-api', 'sms-scanner'],\n  customField: {\n    whatsapp_name: data.pushName || '',\n    source: 'Evolution API V2 - Ray Instance',\n    last_message_preview: messageText.substring(0, 100),\n    instance: data.instance,\n    message_timestamp: messageData.messageTimestamp\n  }\n};\n\n// Datos para el mensaje en GHL\nconst ghlMessageData = {\n  locationId: 'jtEqGdhkoR6iePmZaCmd',\n  type: 'SMS',\n  message: messageText,\n  direction: 'inbound'\n};\n\nconsole.log('‚úÖ Datos procesados para GHL:', { \n  contactData, \n  ghlMessageData,\n  originalSender: data.sender \n});\n\nreturn {\n  contactData,\n  messageData: ghlMessageData,\n  phoneNumber: formattedPhone,\n  originalMessage: messageData,\n  evolutionData: data,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "process-evolution-message",
      "name": "Procesar Evolution Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 280]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={{ JSON.stringify($json.contactData) }}"
      },
      "id": "create-ghl-contact",
      "name": "Crear Contacto GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/conversations/messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $json.messageData.locationId }}\",\n  \"contactId\": \"{{ $node['Crear Contacto GHL'].json.contact.id }}\",\n  \"type\": \"SMS\",\n  \"message\": \"{{ $json.messageData.message }}\",\n  \"direction\": \"inbound\"\n}"
      },
      "id": "create-ghl-message",
      "name": "Crear Mensaje GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1120, 340]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Mensaje Evolution procesado correctamente\",\n  \"data\": {\n    \"contactId\": \"{{ $node['Crear Contacto GHL'].json.contact.id }}\",\n    \"messageId\": \"{{ $node['Crear Mensaje GHL'].json.message ? $node['Crear Mensaje GHL'].json.message.id : 'N/A' }}\",\n    \"phone\": \"{{ $json.phoneNumber }}\",\n    \"sender\": \"{{ $json.evolutionData.sender }}\",\n    \"timestamp\": \"{{ $json.timestamp }}\",\n    \"instance\": \"ray\"\n  }\n}"
      },
      "id": "webhook-success-response",
      "name": "Respuesta √âxito",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [1340, 340]
    },
    {
      "parameters": {
        "jsCode": "// Manejo de errores\nconst error = $input.all()[0];\nconsole.log('‚ùå ERROR en Evolution SMS Scanner:', error);\n\nreturn {\n  success: false,\n  error: error.error || 'Error desconocido',\n  timestamp: new Date().toISOString(),\n  instance: 'ray',\n  webhook_format: 'evolution_api_v2'\n};"
      },
      "id": "error-handler",
      "name": "Manejo Errores",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 460]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Error procesando webhook Evolution\",\n  \"error\": \"{{ $json.error }}\",\n  \"timestamp\": \"{{ $json.timestamp }}\",\n  \"instance\": \"ray\"\n}"
      },
      "id": "error-response",
      "name": "Respuesta Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.5,
      "position": [900, 460]
    }
  ],
  "connections": {
    "Evolution Webhook": {
      "main": [
        [
          {
            "node": "Filter: Evolution Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Evolution Format": {
      "main": [
        [
          {
            "node": "Procesar Evolution Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Manejo Errores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Evolution Message": {
      "main": [
        [
          {
            "node": "Crear Contacto GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Contacto GHL": {
      "main": [
        [
          {
            "node": "Crear Mensaje GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Mensaje GHL": {
      "main": [
        [
          {
            "node": "Respuesta √âxito",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manejo Errores": {
      "main": [
        [
          {
            "node": "Respuesta Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["evolution-api", "whatsapp", "gohighlevel", "fixed-format"],
  "triggerCount": 1,
  "updatedAt": "2025-01-22T02:30:00.000Z",
  "versionId": "2"
}