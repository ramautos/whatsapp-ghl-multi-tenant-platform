{
  "name": "SMS Scanner → GoHighLevel",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "evolution",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-evolution",
      "name": "Webhook Evolution API",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [180, 300],
      "webhookId": "evolution-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.event }}",
              "operation": "equal",
              "value2": "messages.upsert"
            }
          ]
        }
      },
      "id": "filter-messages",
      "name": "Filter: Solo Mensajes",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1.2,
      "position": [400, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extraer datos del mensaje de WhatsApp\nconst data = $input.all()[0].json;\n\nconsole.log('Datos completos recibidos:', JSON.stringify(data, null, 2));\n\n// Verificar estructura de datos\nif (!data.data || !data.data.messages || !Array.isArray(data.data.messages)) {\n  throw new Error('Estructura de datos inválida');\n}\n\nconst message = data.data.messages[0];\nconst key = message.key;\n\n// Extraer información del remitente\nconst fromNumber = key.remoteJid.replace('@s.whatsapp.net', '');\nconst messageText = message.message?.conversation || \n                  message.message?.extendedTextMessage?.text || \n                  message.message?.imageMessage?.caption || \n                  'Mensaje multimedia';\n\n// Solo procesar mensajes entrantes (no enviados por nosotros)\nif (key.fromMe) {\n  throw new Error('Mensaje enviado por nosotros, ignorar');\n}\n\n// Preparar datos para GHL\nconst contactData = {\n  phone: fromNumber,\n  firstName: message.pushName || 'Contacto WhatsApp',\n  lastName: '',\n  email: '',\n  tags: ['whatsapp', 'sms-scanner'],\n  customField: {\n    whatsapp_name: message.pushName,\n    last_message: messageText,\n    source: 'SMS Scanner App'\n  }\n};\n\nconst messageData = {\n  type: 'SMS',\n  message: messageText,\n  contactPhone: fromNumber,\n  timestamp: new Date().toISOString(),\n  direction: 'inbound'\n};\n\nconsole.log('Datos procesados:', {\n  contactData,\n  messageData\n});\n\nreturn {\n  contactData,\n  messageData,\n  originalMessage: message\n};"
      },
      "id": "process-message",
      "name": "Procesar Mensaje",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [620, 240]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $vars.GHL_LOCATION_ID }}"
            },
            {
              "name": "phone",
              "value": "={{ $json.contactData.phone }}"
            },
            {
              "name": "firstName",
              "value": "={{ $json.contactData.firstName }}"
            },
            {
              "name": "tags",
              "value": "={{ $json.contactData.tags }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "create-ghl-contact",
      "name": "Crear/Buscar Contacto GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [840, 180],
      "credentials": {
        "httpHeaderAuth": {
          "id": "ghl-api-credentials",
          "name": "GoHighLevel API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/conversations/",
        "authentication": "genericCredentialType", 
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $vars.GHL_LOCATION_ID }}"
            },
            {
              "name": "contactId",
              "value": "={{ $node['Crear/Buscar Contacto GHL'].json.contact.id }}"
            },
            {
              "name": "type",
              "value": "SMS"
            },
            {
              "name": "message",
              "value": "={{ $json.messageData.message }}"
            }
          ]
        }
      },
      "id": "create-ghl-conversation",
      "name": "Crear Conversación GHL",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1060, 300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "ghl-api-credentials",
          "name": "GoHighLevel API"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"message\": \"Mensaje procesado correctamente\",\n  \"contactId\": \"{{ $node['Crear/Buscar Contacto GHL'].json.contact.id }}\",\n  \"conversationId\": \"{{ $node['Crear Conversación GHL'].json.conversation.id }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "webhook-response",
      "name": "Respuesta Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [1280, 300]
    },
    {
      "parameters": {
        "jsCode": "// Log para debugging\nconst input = $input.all()[0].json;\nconsole.log('❌ ERROR en el flujo:', JSON.stringify(input, null, 2));\n\nreturn {\n  error: true,\n  message: 'Error procesando mensaje',\n  details: input\n};"
      },
      "id": "error-handler",
      "name": "Manejo de Errores",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [620, 420]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Error procesando mensaje\",\n  \"error\": \"{{ $json.message }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}"
      },
      "id": "error-response",
      "name": "Respuesta Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [840, 420]
    }
  ],
  "connections": {
    "Webhook Evolution API": {
      "main": [
        [
          {
            "node": "Filter: Solo Mensajes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Solo Mensajes": {
      "main": [
        [
          {
            "node": "Procesar Mensaje",
            "type": "main", 
            "index": 0
          }
        ],
        [
          {
            "node": "Manejo de Errores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Mensaje": {
      "main": [
        [
          {
            "node": "Crear/Buscar Contacto GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear/Buscar Contacto GHL": {
      "main": [
        [
          {
            "node": "Crear Conversación GHL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear Conversación GHL": {
      "main": [
        [
          {
            "node": "Respuesta Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manejo de Errores": {
      "main": [
        [
          {
            "node": "Respuesta Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["whatsapp", "gohighlevel", "sms"],
  "triggerCount": 1,
  "updatedAt": "2025-01-20T10:00:00.000Z",
  "versionId": "1"
}